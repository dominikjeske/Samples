//--------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//--------------------------------------------------------------------------------------------------

{{ for using in Usings ~}}
using {{ using }};
{{ end ~}}

namespace {{Namespace}}
{
    [GeneratedCode]
    {{~ ClassModifier }} class {{ClassName}}
    {
        public async System.Threading.Tasks.Task<Event> PublishEvent(ActorMessage source, ActorMessage destination, IMessageBroker messageBroker, EventAggregator.RoutingFilter routingFilter)
        {
            {{ for event in Events ~}}
            {{ if for.index == 0 }}if{{ else }}else if{{ end -}} (destination.Type == "{{ event.Name }}")
            {
                var @event = new {{event.Namespace}}.{{event.Name}}();
                @event.SetProperties(source);
                @event.SetProperties(destination);
                await messageBroker.Publish(@event, routingFilter);
                return @event;
            }
            {{ end ~}}

            var ev = new Event();
            ev.SetProperties(source);
            ev.SetProperties(destination);
            await messageBroker.Publish(ev, routingFilter);
            return ev;
        }

        public Command CreateCommand(string message)
        {
            {{ for command in Commands ~}}
            {{ if for.index == 0 }}if{{ else }}else if{{ end -}} (message == "{{ command.Name }}")
            {
                return new {{command.Namespace}}.{{command.Name}}();
            }
            {{ end ~}}

            return new Command();
        }
    }
}